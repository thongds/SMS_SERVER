<?php

/**
 * Created by PhpStorm.
 * User: ssd
 * Date: 2/8/17
 * Time: 4:56 PM
 */
use \App\Http\Controllers\Helper\UtilFunction;
class UtilFunctionTest extends TestCase{

    function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testArrayMerge(){
        $beforeUpdate = ['name' => '123','birthday' => '12/12/1990','id' =>1];
        $afterUpdate = ['name' => '123','birthday' => '12/11/100','id'=>1];
        $ignoreKey = ['id'];
        $result = UtilFunction::mergeTwoArray($beforeUpdate,$afterUpdate,$ignoreKey);
        $this->assertEquals(2,count($result));
        $this->assertEquals('12/11/100',$result['birthday']);
        $this->assertEquals('1',$result['id']);

    }
    public function testArrayMergeNotSameArray(){
        $beforeUpdate = ['name' => '123','birthday' => '12/12/1990','id' =>1,'a' => 'b'];
        $afterUpdate = ['name' => '123','birthday' => '12/11/100','id'=>1];
        $ignoreKey = ['id'];
        $result = UtilFunction::mergeTwoArray($beforeUpdate,$afterUpdate,$ignoreKey);
        $this->assertEquals(2,count($result));
    }
    public function testArrayMergeSameArray(){
        $beforeUpdate = ['name' => '123','birthday' => '12/12/1990','id' =>1,'a' => 'b'];
        $afterUpdate = ['name' => '123','birthday' => '12/12/1990','id'=>1];
        $ignoreKey = ['id'];
        $result = UtilFunction::mergeTwoArray($beforeUpdate,$afterUpdate,$ignoreKey);
        $this->assertEquals(1,count($result));
    }
    public function testArrayMergeEmpty(){
        $beforeUpdate = array();
        $afterUpdate = array();
        $ignoreKey = ['id'];
        $result = UtilFunction::mergeTwoArray($beforeUpdate,$afterUpdate,$ignoreKey);
        $this->assertEquals(0,count($result));
    }

    function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
